name: 'Universal dylib generator'
description: 'Download and install from homebrew and combine into a universal dylib'

inputs:
  packages:
    description: 'Packages to be processed. Multiple packages can be specified by separating with a space.'
    required: true
    type: string
  arm64_prefix_directory:
    description: 'Directory to expand arm64 packages.'
    required: false
    type: string
  output_directory:
    description: 'Directory to output the generated dylib. If not specified, overwrite the dylib under /usr/local.'
    required: false
    type: string
  verbose:
    description: 'Enable printing command lines.'
    required: false
    default: false
    type: boolean

runs:
  using: 'composite'
  steps:
    - name: Download customized brew
      id: step0
      shell: bash
      env:
        arm64_prefix_directory: ${{inputs.arm64_prefix_directory}}
      run: |
        if test -n "$arm64_prefix_directory"; then
          mkdir -p "$arm64_prefix_directory"
          cd "$arm64_prefix_directory"
        else
          mkdir "${{github.action_path}}/brew"
          cd "${{github.action_path}}/brew"
        fi
        echo "arm64_prefix_directory=$PWD" >> $GITHUB_OUTPUT

        git clone https://github.com/norihiro/brew.git .
        git switch macos-force-arm64
        git clone \
          --origin=origin --template= --depth=1 \
          https://github.com/Homebrew/homebrew-core \
          ./Library/Taps/homebrew/homebrew-core
        ./bin/brew install pkg-config

    - name: Install packages for arm64
      shell: bash
      working-directory: ${{steps.step0.outputs.arm64_prefix_directory}}
      run: |
        packages=(${{inputs.packages}})
        ./bin/brew install --force-bottle "${packages[@]}"

    - name: Install packages for x86_64
      shell: bash
      run: |
        packages=(${{inputs.packages}})
        brew install --force-bottle "${packages[@]}"

    - name: Lipo
      shell: bash
      working-directory: ${{steps.step0.outputs.arm64_prefix_directory}}
      env:
        output_directory: ${{inputs.output_directory}}
      run: |
        cd ./lib

        odir=${output_directory:-$(mktemp -d)}

        find . -name '*.a' -o -name '*.dylib' |
        while read lib ; do
          o=${odir}/$lib
          mkdir -p $(dirname $o)
          lipo -create -output $o $lib /usr/local/lib/$lib < /dev/null || true
          if test -z "$output_directory"; then
            mv -f $o /usr/local/lib/$lib
          fi
        done
